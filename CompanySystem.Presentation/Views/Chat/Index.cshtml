@model ChatViewModel
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="container mt-4">
    <h2>AI Chatbot</h2>

    <div class="card chat-widget p-3 mb-3" style="height: 400px; overflow-y: auto; background: #f1f3f5;">
        <ul class="list-unstyled mb-0" id="chatWindow">
            @* Existing messages will appear here if any *@
        </ul>
    </div>

    <form id="chatForm" class="d-flex">
        <input id="messageInput" class="form-control me-2" placeholder="Ask AI..." />
        <button type="submit" class="btn btn-primary">Send</button>
    </form>
</div>

<script>
    const form = document.getElementById('chatForm');
    const chatWindow = document.getElementById('chatWindow');
    const messageInput = document.getElementById('messageInput');

    form.addEventListener('submit', async e => {
        e.preventDefault();
        const userMessage = messageInput.value.trim();
        if (!userMessage) return;

        // 1️ Append user message
        chatWindow.innerHTML += `<li class="mb-2 d-flex justify-content-end">
            <div class="p-2 rounded" style="background:#0d6efd;color:white;max-width:70%;">
                <strong>You:</strong> ${userMessage}
            </div>
        </li>`;
        chatWindow.scrollTop = chatWindow.scrollHeight;
        messageInput.value = '';

        // 2️ Append animated "typing" indicator
        const loadingId = `loading-${Date.now()}`;
        chatWindow.innerHTML += `<li id="${loadingId}" class="mb-2 d-flex justify-content-start">
            <div class="p-2 rounded" style="background:#e9ecef;color:black;max-width:70%;">
                <span id="${loadingId}-text">AI is typing</span>
            </div>
        </li>`;
        chatWindow.scrollTop = chatWindow.scrollHeight;

        // Animate dots like real typing
        const loadingText = document.getElementById(`${loadingId}-text`);
        let dots = 0;
        const interval = setInterval(() => {
            dots = (dots + 1) % 4; // cycles 0..3
            loadingText.textContent = 'AI is typing' + '.'.repeat(dots);
            chatWindow.scrollTop = chatWindow.scrollHeight; // keep scrolling
        }, 500);

        // 3️ Send message to backend
        const formData = new FormData();
        formData.append('Message', userMessage);

        const response = await fetch('/Chat/Index', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();

        // 4️ Stop animation and remove loading indicator
        clearInterval(interval);
        const loadingElement = document.getElementById(loadingId);
        if (loadingElement) loadingElement.remove();

        // 5️ Append AI response
        let content = `<strong>AI:</strong> `;
        if (data.success && data.results && data.results.length) {
            content += '<table class="table table-sm table-bordered mb-0"><thead><tr>';
            Object.keys(data.results[0]).forEach(k => content += `<th>${k}</th>`);
            content += '</tr></thead><tbody>';
            data.results.forEach(row => {
                content += '<tr>';
                Object.values(row).forEach(v => content += `<td>${v}</td>`);
                content += '</tr>';
            });
            content += '</tbody></table>';
        } else {
            content += data.message || '(No results)';
        }

        chatWindow.innerHTML += `<li class="mb-2 d-flex justify-content-start">
            <div class="p-2 rounded" style="background:#e9ecef;color:black;max-width:70%;">
                ${content}
            </div>
        </li>`;
        chatWindow.scrollTop = chatWindow.scrollHeight;
    });
</script>